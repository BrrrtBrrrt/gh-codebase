#import TransitionBase from transitionBase;
#import CollectionsUtil from ../../collections/util;

TransitionExclude = TransitionBase

TransitionExclude._excluded = null

TransitionExclude.init = function(excluded)
    self._excluded = excluded
    excluded_tmp = []
    for excluded_char in excluded
        excluded_tmp.push(excluded_char.code)
    end for
    excluded_tmp = excluded_tmp.sort
    excluded = []
    for excluded_char_tmp in excluded_tmp
        excluded.push(char(excluded_char_tmp))
    end for
    excludedStr = "[" + excluded.join(", ") + "]"
    self.setRepresentation("^" + excludedStr[1:][0:excludedStr.len - 2])
end function

TransitionExclude.getExcluded = function()
    return self._excluded
end function

TransitionExclude.match = function(character)
    if self._excluded != null then
        return not (CollectionsUtil.binarySearch(self._excluded, character) >= 0)
    else
        return false
    end if
end function

TransitionExclude.clone = function()
    t = new TransitionExclude
    t.init(self._excluded)
    return t
end function

module.exports = TransitionExclude